Project Members: Ben Carlisle
Project Link: https://finalprojectbencarlisle.herokuapp.com/
Project Requirements:
  Login:
    Login system is implemented in the users blueprint.
      The code for this is located in the following files
        flask_app/users/routes.py
        flask_app/users/forms.py
        flask_app/models.py
        flask_app/__init__.py
        flask_app/templates/login.html
        flask_app/templates/register.html
        flask_app/templates/mfa_setup.html
        flask_app/templates/not_confirmed.html
    The incentive for users is that they are unable to post or comment unless they login.
  Forms:
    Four forms included are a login form, registration form, create post form, and a comment form.
      The code for this is located in the following files
        LoginForm, RegistrationForm: flask_app/users/forms.py
        CreatePostForm, CommentForm: flask_app/posts/forms.py
    The login and registration forms are used for user management and the create post and comment forms are for other functions on the site.
  Security:
    A proper CSP is used to prevent unwanted external content from being added without blocking intended content.
      The code for the CSP is located at flask_app/__init__.py
    All forms are CSRF protected
      The code for this is found in the following files
        flask_app/templates/create_post_prelim.html
        flask_app/templates/create_post.html
        flask_app/templates/login.html
        flask_app/templates/register.html
        flask_app/templates/post_detail.html
        flask_app//account.html
    The site is Talisman protected
      The code for this is located at __init__.py
    Every password is hashed (and salted)
      The code for this is located at flask_app/users/routes.py
    2FA is used and is mandatory for users
      The code for this occurs in the following files:
        flask_app/users/routes.py
        flask_app/users/forms.py
        flask_app/models.py
        flask_app/templates/login.html
        flask_app/templates/mfa_setup.html
  Blueprints
    Two distinct blueprints: Users and Posts
    Visible pages for Users:
      login
        Code located at:
          flask_app/templates/login.html
          flask_app/users/routes.py
      register
        Code located at:
          flask_app/templates/register.html
          flask_app/users/routes.py
      account
        Code located at:
          flask_app/templates/account.html
          flask_app/users/routes.py
    Visible pages for Posts
      create_post
        Code located at:
          flask_app/templates/create_post.html
          flask_app/posts/routes.py
      create_post_detail
        Code located at:
          flask_app/templates/create_post_detail.html
          flask_app/posts/routes.py
      posts
        Code located at:
          flask_app/templates/post_detail.html
          flask_app/posts/routes.py
    A 7th description page is also added with a description of the project and my name
      It's code is located at flask_app/templates/about.html
  Presentable
    Bootstrap is used to make the site look presentable\
  New python package
    Flask_Mail is used to add a confirmation email to account creation
    The code for this is located in the following files:
      flask_app/models.py
      flask_app/users/routes.py
      flask_app/not_confirmed.html
    The effect of this package is visible since the confirmation link must have been clicked in order to login to the site.
Project Changes from the Proposal:
  Content sniffing is not specifically protected against since this is not a threat that is particularly relevant to the site since the only imported media is from YouTube.
  A majority of the pages mentioned in the blueprints section was changed.
    Instead of a profile, posts, and comments page in the Users blueprint, a profile (account), login, and register page are used since the above posts are rather redundant and unnecessary copies of the profile page.
    Instead of a main, hottest, and post page in the Posts blueprint, a create_post, create_post_detail, and posts page are used since the above page are rather redundant and unnecessary copies of the posts page.
